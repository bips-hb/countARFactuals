% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CountARFactualClassif.R
\name{CountARFactualClassif}
\alias{CountARFactualClassif}
\title{CountARFactual (ARF-based Counterfactuals) for Classification Tasks}
\description{
CountARFactuals generates counterfactuals based on the adversarial random forests introduced in Watson et. al 2023
}
\examples{
if (require("randomForest")) {
 \donttest{
  # Train a model
  rf = randomForest(Species ~ ., data = iris)
  # Create a predictor object
  predictor = iml::Predictor$new(rf, type = "prob")
  # Find counterfactuals for x_interest
  arf_classif = CountARFactualClassif$new(predictor)
 
  cfactuals = arf_classif$find_counterfactuals(
    x_interest = iris[150L, ], desired_class = "versicolor", desired_prob = c(0.5, 1)
  )
  # Print the counterfactuals
  cfactuals$data
  # Plot evolution of hypervolume and mean and minimum objective values
  cfactuals$evaluate_set()
  cfactuals$plot_parallel()
  }
}

}
\references{
Watson, D. S., Blesch, K., Kapar, J., and Wright, M. N. (2023). Adversarial
random forests for density estimation and generative modeling. In Proceedings
of the 26th International Conference on Artificial Intelligence and Statistics,
pages 5357â€“5375. PMLR.
}
\section{Super classes}{
\code{\link[counterfactuals:CounterfactualMethod]{counterfactuals::CounterfactualMethod}} -> \code{\link[counterfactuals:CounterfactualMethodClassif]{counterfactuals::CounterfactualMethodClassif}} -> \code{CountARFactualClassif}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CountARFactualClassif$new()}}
\item \href{#method-clone}{\code{CountARFactualClassif$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="counterfactuals" data-topic="CounterfactualMethod" data-id="print">}\href{../../counterfactuals/html/CounterfactualMethod.html#method-print}{\code{counterfactuals::CounterfactualMethod$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="counterfactuals" data-topic="CounterfactualMethodClassif" data-id="find_counterfactuals">}\href{../../counterfactuals/html/CounterfactualMethodClassif.html#method-find_counterfactuals}{\code{counterfactuals::CounterfactualMethodClassif$find_counterfactuals()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{MOCClassif} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CountARFactualClassif$new(
  predictor,
  max_feats_to_change = predictor$data$n.features,
  n_synth = 10L,
  n_iterations = 50L,
  feature_selector = "random_importance",
  importance_method = "icesd"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{predictor}}{(\link[iml]{Predictor})\cr
The object (created with \code{iml::Predictor$new()}) holding the machine learning model and the data.}

\item{\code{max_feats_to_change}}{(\code{numeric(1)})\cr
The maximum number of features allowed to be altered (default number of features of \code{predictor$data}).}

\item{\code{n_synth}}{(\code{numeric(1)}) \cr
The number of samples drawn from the marginal distributions (default 10L).}

\item{\code{n_iterations}}{(\code{numeric(1)}) \cr
The number of iterations. In each iteration a new terminal node is chosen
from which the \code{n_synth} candidates are drawn (default 50L).}

\item{\code{feature_selector}}{(\code{character(1)})\cr
The method to choose features that are fixed for a counterfactual (and thus
part of the conditioning set when choosing tree paths). The default
\code{random_importance} means that the probability of being in the conditioning set
is proportional to how unimportant a feature is (unimportant features are more likely to be fixed).
The strategy \code{importance} means that all features are fixed except for
the up to \code{max_feats_to_change} most important features.
The strategy \code{random} randomly chooses up to \code{max_feats_to_change}
features that are not part of the conditioning set. All others are part.}

\item{\code{importance_method}}{(\code{character(1)})\cr
The local importance method used to choose variables for the conditioning set.
Ignored if \code{feature_selector = "random"}.
Either "fastshap" based on the \code{fastshap} package or "icesd" (default)
based on the standard deviation of the ICE curve is possible.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CountARFactualClassif$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
